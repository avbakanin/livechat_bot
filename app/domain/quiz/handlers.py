from aiogram import Router
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from shared.constants import BotCommands

router = Router()


# –ù–∞—á–∞–ª–æ –∫–≤–∏–∑–∞
@router.message(Command(commands=[BotCommands.QUIZ]))
async def start_quiz(message: Message, state: FSMContext):
    print(f"üéØ Quiz handler called for user {message.from_user.id}")
    try:
        await message.answer(
            "–ü—Ä–∏–≤–µ—Ç! –î–∞–≤–∞–π –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è –ø–æ–±–ª–∏–∂–µ. –Ø –∑–∞–¥–∞–º —Ç–µ–±–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–µ–æ–±—ã—á–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤, "
            "—á—Ç–æ–±—ã –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å —Ç–≤–æ–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä –∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è. –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –º–Ω–µ –æ–±—â–∞—Ç—å—Å—è —Å —Ç–æ–±–æ–π –±–æ–ª–µ–µ –æ—Å–º—ã—Å–ª–µ–Ω–Ω–æ!",
            reply_markup=InlineKeyboardMarkup(
                inline_keyboard=[[InlineKeyboardButton(text="–ù–∞—á–∞—Ç—å –∫–≤–∏–∑ ‚ú®", callback_data="start_quiz")]]
            ),
        )
        print(f"‚úÖ Quiz message sent to user {message.from_user.id}")
    except Exception as e:
        print(f"‚ùå Error sending quiz message: {e}")
