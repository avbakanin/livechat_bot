[tool.black]
line-length = 127
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.venv
  | venv
  | __pycache__
  | migrations
)/
'''

[tool.isort]
profile = "black"
line_length = 127
known_first_party = ["app", "core", "handlers"]


[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[tool.poe.tasks]
# –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
run = "python app/main.py"
install = "pip install -r requirements.txt"
dev-install = "pip install -r requirements-dev.txt"
update = "pip install --upgrade -r requirements.txt"

# –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
venv = "python -m venv venv && echo '‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ' && echo '–ê–∫—Ç–∏–≤–∏—Ä—É–π: source venv/bin/activate (Linux/Mac) –∏–ª–∏ .\\venv\\Scripts\\activate (Windows)'"

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∫–æ–¥—Å—Ç–∞–π–ª–∞
format = "python -m black . && python -m isort ."
lint = "python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics && python -m flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics"
check = "python -m black --check . && python -m isort --check-only . && python -m flake8 ."
quick-lint = "python -m flake8 . --select=E9,F63,F7,F82 --exit-zero"

# –û—á–∏—Å—Ç–∫–∞
clean = "find . -name '*.pyc' -delete && find . -name '__pycache__' -exec rm -rf {} + && echo 'üßπ –ö—ç—à –æ—á–∏—â–µ–Ω!'"

# –°–æ—Å—Ç–∞–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏
setup = ["install", "run"]
dev-setup = ["dev-install", "run"]
full-check = ["format", "lint"]
restart = ["clean", "run"]