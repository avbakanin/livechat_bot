#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ premium_promo –≤–æ –≤—Å–µ—Ö —è–∑—ã–∫–∞—Ö
"""

import json
import os

def check_premium_promo():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥—ã premium_promo –≤–æ –≤—Å–µ—Ö —è–∑—ã–∫–∞—Ö."""
    
    languages = ['de', 'en', 'es', 'fr', 'it', 'pl', 'ru', 'sr', 'tr']
    
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã premium_promo –≤–æ –≤—Å–µ—Ö —è–∑—ã–∫–∞—Ö...")
    print()
    
    for lang in languages:
        file_path = f"locales/{lang}/translations.json"
        
        if not os.path.exists(file_path):
            print(f"‚ùå –§–∞–π–ª {file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            continue
            
        try:
            with open(file_path, 'r', encoding='utf-8') as f:
                data = json.load(f)
            
            if 'commands' in data and 'status' in data['commands']:
                premium_promo = data['commands']['status'].get('premium_promo', '–ù–ï –ù–ê–ô–î–ï–ù–û')
                print(f"üá∑üá∫ {lang.upper()}: {premium_promo}")
            else:
                print(f"‚ùå {lang.upper()}: —Å–µ–∫—Ü–∏—è commands.status –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ {file_path}: {e}")
    
    print()
    print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

if __name__ == "__main__":
    check_premium_promo()
