#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –∫–Ω–æ–ø–∫–∏ extend_premium –≤–æ –≤—Å–µ—Ö —è–∑—ã–∫–∞—Ö
"""

import json
import os

def check_translations():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥—ã –≤–æ –≤—Å–µ—Ö —è–∑—ã–∫–∞—Ö."""
    
    languages = ['de', 'en', 'es', 'fr', 'it', 'pl', 'ru', 'sr', 'tr']
    missing_translations = []
    
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã –¥–ª—è –∫–Ω–æ–ø–∫–∏ 'extend_premium'...")
    
    for lang in languages:
        file_path = f"locales/{lang}/translations.json"
        
        if not os.path.exists(file_path):
            print(f"‚ùå –§–∞–π–ª {file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            continue
            
        try:
            with open(file_path, 'r', encoding='utf-8') as f:
                data = json.load(f)
            
            if 'buttons' in data and 'extend_premium' in data['buttons']:
                translation = data['buttons']['extend_premium']
                print(f"‚úÖ {lang.upper()}: {translation}")
            else:
                missing_translations.append(lang)
                print(f"‚ùå {lang.upper()}: –ø–µ—Ä–µ–≤–æ–¥ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ {file_path}: {e}")
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏:")
    print(f"‚úÖ –ü–µ—Ä–µ–≤–µ–¥–µ–Ω–æ: {len(languages) - len(missing_translations)}/{len(languages)}")
    
    if missing_translations:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–≤–æ–¥—ã –¥–ª—è: {', '.join(missing_translations)}")
    else:
        print("üéâ –í—Å–µ –ø–µ—Ä–µ–≤–æ–¥—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")

if __name__ == "__main__":
    check_translations()
